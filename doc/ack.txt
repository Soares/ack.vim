*ack.txt*   Empower your searches.			*ack* *Ack*

Author:  Nate Soares <http://so8r.es>
	 Antoine Imbert <antoine.imbert+ackvim@gmail.com>
License: Same terms as Vim itself (see |license|).

==============================================================================
CONTENTS						*ack-contents*
	1. Introduction...................................|ack-intro|
	2. Configuration..................................|ack-config|
	3. Commands.......................................|ack-commands|
	4. Mappings.......................................|ack-mappings|
	6. About..........................................|ack-about|

=============================================================================
INTRODUCTION						*ack-intro*

Empower your searches. This plugin helps you:

* Change the |:grep| command to use 'ack'.
* Control what happens after you search.
* Search for files, not just words.

=============================================================================
CONFIGURATION						*ack-config*

							*g:loaded_ack*
Use this to disable the plugin entirely: >
	let g:loaded_ack = 1
<

							*g:ack_clobber_grep*
Whether or not to clobber the current |grepprg|.
This is on by default. If it's a true value, the program >
	ack -H --nocolor --nogroup --column
< will be set as your 'grepprg'. If it's a false value, no such clobbering
will be done. You may also set it to a custom string and we'll happily clobber
your 'grepprg' with whatever you'd like to use instead.

							*g:ack_qhandler*
What to do when results are dumped into the |quickfix| window. >
	botright copen
< is the default. If you're a |:CtrlP| fan, though, you might want to consider
'CtrlPQuickfix' instead.

							*g:ack_lhandler*
What to do when results are dumped into the |location-list|. >
	botright lopen
< is the default.

							*g:ack_ldefault*
Whether to use the |location-list| instead of the |quickfix| window when no
location is specified. Disabled by default.

							*g:ack_automap*
Whether or not to turn on the default mappings. No mappings will be made
unless you set this variable: >
	let g:ack_automap = 1
< See |ack-mappings| for the default mappings.

=============================================================================
COMMANDS						 *ack-commands*

:Ack[!] {pattern} [{directory}]				*:Ack*
	Search recursively in {directory} (which defaults to the current
	directory) for the {pattern}. Similar to the |:grep| command but will
	not jump you to the first result unless [!] is given. (This is the
	opposite of :grep's bang.) Executes |g:ack_qhandler| afterwards.

:Ackvanced[!] {options} {pattern} [{directory}]		*:Ackvanced*
	Just like |:Ack|, but takes [options]. [options] is a string
	containing at least one of the characters 'alfq'.

	a	Results are appended to existing results.
	l	The location list is used.
	f	Search for files
	q	The quickfix window is used.

	For example >
		:Ackvanced fal test.c
<	searches for the file 'test.c' and adds results to the location list
	without removing existing results there.

=============================================================================
MAPPINGS						*ack-mappings*

Ack does not change your mappings by default. We recommend you add your own
mappings depending upon what you search for a lot. Here's some simple
suggestions: >
	noremap <leader>a  :Ack ¬
	noremap <leader>Aa :Ackvanced a ¬
	noremap <leader>Aw :Ack <C-R><C-W> ¬
	noremap <leader>Af :Ackvanced f ¬
<
NOTE: Notice the '¬' markers above. They should not be included in your
mapping. They are there to show you that the mapping should have trailing
whitespace.

If you really like these suggestions you can enable them with |g:ack_automap|.
You're encouraged to customize your mappings to meet your own needs.

=============================================================================
ABOUT							*ack-about*

Grab the latest version or report a bug on GitHub:

http://github.com/Soares/ack.vim

This was forked from Antoine Imbert <antoine.imbert+ackvim@gmail.com> and
suited to my taste. Changes include:

* Combine a plethora of scattered commands into |:Ackvanced|
* Use vim's autoload functionality to speed up startup time
* Prevent jumping to the first result easier
* Give the user more control over what happens once acking finishes

See http://betterthangrep.com/ for more about the ack program.

 vim:ft=help:noet:ts=8:sw=8:sts=8
